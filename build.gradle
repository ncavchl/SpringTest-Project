buildscript {
    ext { // 전역변수를 설정하겠다는 의미
        springBootVersion = "2.1.9.RELEASE"
        // springBootVersion 변수 설정하고 값을 2.1.9.RESLEASE 7에서 9로 수정
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        //위 전역변수를 의존성으로 받겠다는 의미
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//플러그인 의존성들을 적용할 것인지 - 항상 추가하기
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//io.spring.dependency-management - 스프링부트의 의존성들을 관리해 주는 플러그인이라 꼭 추가해야함


group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8
//원래 1.8

//각 의존성(라이브러리)들을 어떤 원격 저장소에 받을지 - 라이브러리 업로드 난이도 때문에 jcenter도 많이 이용
//요즘은 jcenter를 더 많이 씀 편리하기 때문에
repositories {
    mavenCentral()
    jcenter()
}

//프로젝트 개발에 필요한 의존성들을 선언하는 곳.
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
//    compile('org.projectlombok:lombok')
    //- 이거 말고 아래버전으로 업데이트 필요

    compileOnly 'org.projectlombok:lombok:1.18.12' // 원래 10
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    //스프링 부트용 spring data jpa 추상화 라이브러리 & 자동으로 jpa 관련 라이브러리 버전 관리해줌.

    compile('org.springframework.boot:spring-boot-starter-mustache')
    //템플릿 엔진

    compile('com.h2database:h2')
    //인메모리 관계형 DB, 별도의 설치 없이 프로젝트 의존성으로 관리가능 , 메모리에서 실행되어 애플리케이션 재시작할 때마다 초기화(테스트 용도)
    //JPA테스트, 로컬 환경에서의 구동으로 사용.

    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    compile('org.springframework.session:spring-session-jdbc')
    //소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현시 필요한 의존성입니다.

    testCompile('org.springframework.boot:spring-boot-starter-test')

    // https://mvnrepository.com/artifact/org.springframework.session/spring-session-data-redis
    compile group: 'org.springframework.session', name: 'spring-session-data-redis', version: '2.3.0.RELEASE'



}
